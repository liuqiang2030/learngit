package {	public class ConcreteSubject implements Subject	{		private var light:String;		private var observers:Array;		function ConcreteSubject ()		{			trace ("*|*Concrete Subject*|*");			observers=new Array();		}		public function subscribeObserver (obserNow:Observer):void		{			observers.push (obserNow);		}		public function unsubscribeObserver (obserNow:Observer):void		{			for (var ob=0; ob<observers.length; ob++)			{				if (observers[ob]==obserNow)				{					observers.splice (ob,1);					break;				}			}		}		public function notifyObserver ():void		{			for (var notify in observers)			{				observers[notify].update (light);				trace ("Observer " + notify + " Light is "+light);			}		}		public function setLight (light:String):void		{			this.light=light;			notifyObserver ();		}	}}