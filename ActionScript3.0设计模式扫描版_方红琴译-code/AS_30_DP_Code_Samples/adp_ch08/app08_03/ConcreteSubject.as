package {	//Concrete Subject	public class ConcreteSubject implements Subject	{		private var news:String;		private var sports:String;		private var stocks:Number;		private var entertainment:String;		private var observers:Array;		//Add variable to check for duplicates		private var duplicate:Boolean;		//Constructor function		public function ConcreteSubject ():void		{			trace ("*|*Concrete Subject*|*");			observers=new Array();		}		//Subscribe and Prevent Re-subscription		public function subscribeObserver (obserNow:Observer):void		{			var duplicate:Boolean = false;			for (var ob=0; ob<observers.length; ob++)			{				if (observers[ob]==obserNow)				{					duplicate=true;					trace (observers[ob].subName+ " is already a subscriber.\n");				}			}			if (! duplicate)			{				observers.push (obserNow);			}		}		//Unsubscribe and remove from array		public function unsubscribeObserver (obserNow:Observer):void		{			for (var ob=0; ob<observers.length; ob++)			{				if (observers[ob]==obserNow)				{					observers.splice (ob,1);				}			}		}		//Set up notification and format output		public function notifyObserver ():void		{			for (var notify in this.observers)			{				observers[notify].update (news,sports,stocks,entertainment);				var nowNews:String=" sees that "+ news + " is interesting,";				var nowSports:String = " and learns that " + sports;				var nowStocks:String=".\nWhoaa!, the stock market is at " + stocks;				var nowEntertain:String=" and "+ entertainment + " is showing at the Bijou.";				trace (observers[notify].subName + nowNews + nowSports + nowStocks + nowEntertain);			}		}		//Add all necessary states		public function setType (news:String,sports:String,stocks:Number,entertainment:String):void		{			this.news=news;			this.sports=sports;			this.stocks=stocks;			this.entertainment=entertainment;			notifyObserver ();		}	}}