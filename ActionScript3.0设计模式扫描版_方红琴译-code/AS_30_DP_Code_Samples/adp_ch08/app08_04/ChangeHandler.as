package {	import flash.events.Event;	import flash.events.MouseEvent;	import flash.text.TextField;	import flash.text.TextFormat;	import flash.display.Sprite;	public class ChangeHandler extends Sprite	{		private var eKiller:uint;		private var aKiller:uint;		private var aFlag:Number;		private var aeFlag:Number;		private var eFlag:Number;		private var lFlag:Number;		private var outputColor:Number;		private var battleUpdate:Array=[];		private var warrior:Array=[];		private var scoreSetter:ConcreteSubject;		private var earthling:ConcreteObserver;		private var alien:ConcreteObserver;		private var scoreFormat:TextFormat;		private var missile:Missile;		private var alienMC:Alien;		private var torpedo:Torpedo;		private var androidMC:Android;		private var beam:Beam;		private var earthlingMC:Earthling;		//Main Function		public function ChangeHandler ()		{			scoreSetter=new ConcreteSubject();			earthling=new ConcreteObserver(scoreSetter);			warrior.push (earthling);			earthling.nomDeGuerre="Earth Fighter";			var android:ConcreteObserver=new ConcreteObserver(scoreSetter);			warrior.push (android);			android.nomDeGuerre="Android Beam Base";			alien=new ConcreteObserver(scoreSetter);			warrior.push (alien);			alien.nomDeGuerre="Alien Menace";			var eNm:String=earthling.nomDeGuerre.toLowerCase();			var anNm:String=android.nomDeGuerre.toLowerCase();			var alNm:String=alien.nomDeGuerre.toLowerCase();			battleUpdate=new Array(3);			scoreSetter.setScore (0,"None");			createTextWindow ();			getParts ();		}		//Create Output Windows		private function createTextWindow ():void		{			for (var i:int=0; i < battleUpdate.length; i++)			{				battleUpdate[i]=new TextField();				addChild (battleUpdate[i]);				battleUpdate[i].x=20* 1 + (i * 180);				battleUpdate[i].y=10;				battleUpdate[i].width=150;				battleUpdate[i].height=95;				battleUpdate[i].wordWrap=true;				battleUpdate[i].multiline=true;				battleUpdate[i].border=true;				battleUpdate[i].textColor=0xffffee;				scoreFormat=new TextFormat();				scoreFormat.leftMargin=7;				scoreFormat.rightMargin=7;				getFont (warrior[i].nomDeGuerre);				battleUpdate[i].borderColor=outputColor;				battleUpdate[i].defaultTextFormat=scoreFormat;				battleUpdate[i].text=warrior[i].nomDeGuerre+ ":\n"+warrior[i].passOn();			}		}		//Get the font		private function getFont (creature:String):void		{			switch (creature)			{				case "Earth Fighter" :					outputColor=0xff0000;					scoreFormat.font="Verdana";					break;				case "Android Beam Base" :					outputColor=0x00ff00;					scoreFormat.font="Comic Sans MS";					break;				case "Alien Menace" :					outputColor=0x0000ff;					scoreFormat.font="Arial Black";					break;			}		}		//Get the movie clips from the Library		private function getParts ():void		{			//Earthling			earthlingMC=new Earthling();			addChild (earthlingMC);			earthlingMC.x=60,			earthlingMC.y=120;			missile=new Missile();			addChild (missile);			missile.x=earthlingMC.x+25;			missile.y=earthlingMC.y+35;			earthlingMC.addEventListener (MouseEvent.CLICK,fireMissile);			earthlingMC.addEventListener (Event.ENTER_FRAME,earthlingHit);			//Android			androidMC=new Android();			addChild (androidMC);			androidMC.x=300;			androidMC.y=380;			beam=new Beam();			addChild (beam);			beam.x=androidMC.x;			beam.y=androidMC.y;			androidMC.addEventListener (MouseEvent.CLICK,fireBeam);			androidMC.addEventListener (Event.ENTER_FRAME,beamHit);			//Alien			alienMC=new Alien();			addChild (alienMC);			torpedo=new Torpedo();			addChild (torpedo);			alienMC.x=420,			alienMC.y=120;			torpedo.x=alienMC.x-7;			torpedo.y=alienMC.y+17;			alienMC.addEventListener (MouseEvent.CLICK,fireTorpedo);			alienMC.addEventListener (Event.ENTER_FRAME,alienHit);		}		//Earthling fires missle		private function fireMissile (evt:Event)		{			missile.play ();			eFlag=0;		}		//Earthling hits Alien		private function earthlingHit (evt:Event)		{			this.alienMC=alienMC;			if (missile.hitTestObject(alienMC) && eFlag==0)			{				eFlag=1;				aKiller++;				scoreSetter.setScore (aKiller,"Alien Hit");				dataOut ();				if (aKiller >= 5)				{					scoreSetter.setScore (aKiller,"Alien Out");					alien.nomDeGuerre="Alien Destroyed";					this.alienMC.rotation=90;					torpedo.rotation=90;					killWarrior (alien);					dataOut ();				}			}		}		//Android fires beam		private function fireBeam (evt:Event)		{			beam.play ();			aFlag=0;			aeFlag=0;		}		//Android beam hits Alien or Earthling		private function beamHit (evt:Event)		{			if (beam.hitTestObject(alienMC) && aFlag==0)			{				aFlag=1;				aKiller++;				scoreSetter.setScore (aKiller,"BeamHit on Alien");				dataOut ();				if (aKiller >= 5)				{					scoreSetter.setScore (aKiller,"Alien Out");					alien.nomDeGuerre="Alien Destroyed";					this.alienMC.rotation=90;					torpedo.rotation=90;					killWarrior (alien);					dataOut ();				}			}			if (beam.hitTestObject(earthlingMC) && aeFlag==0)			{				aeFlag=1;				eKiller++;				scoreSetter.setScore (eKiller,"BeamHit on Earthling");				dataOut ();				if (eKiller >= 5)				{					scoreSetter.setScore (eKiller,"Earthling Out");					earthling.nomDeGuerre="Earthling Off";					this.earthlingMC.rotation=90;					missile.rotation=90;					killWarrior (earthling);					dataOut ();				}			}		}		//Alien Fires torpedo		private function fireTorpedo (evt:Event)		{			torpedo.play ();			lFlag=0;		}		//Alien hits Earthling		private function alienHit (evt:Event)		{			this.earthlingMC=earthlingMC;			if (torpedo.hitTestObject(earthlingMC) && lFlag==0)			{				lFlag=1;				eKiller++;				scoreSetter.setScore (eKiller,"Earthling Hit");				dataOut ();				if (eKiller >= 5)				{					scoreSetter.setScore (eKiller,"Earthling Out");					earthling.nomDeGuerre="Earthling Off";					this.earthlingMC.rotation=90;					missile.rotation=90;					killWarrior (earthling);					dataOut ();				}			}		}		//Output Data		private function dataOut ()		{			for (var i:int = 0; i < battleUpdate.length; i++)			{				battleUpdate[i].text=warrior[i].nomDeGuerre+ ":\n"+warrior[i].passOn();			}		}		//Kill zone		public function killWarrior (warship:ConcreteObserver)		{			scoreSetter.unsubscribeObserver (warship);		}	}}