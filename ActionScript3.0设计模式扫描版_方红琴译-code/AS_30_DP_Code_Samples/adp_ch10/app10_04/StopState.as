package {	//Stop State #2	import flash.net.NetStream;	class StopState implements State	{		var videoWorks:VideoWorks;		public function StopState(videoWorks:VideoWorks)		{			trace("--Stop State--");			this.videoWorks=videoWorks;		}		public function startPlay(ns:NetStream,flv:String):void		{			//Note: the second paramater - 0 - specifies an FLV file			//the NetStream method is from Client Side			//Communication ActionScript but works with AS 3.0			//because ObjectEncoding is imported. 			ns.play(flv,0);			trace("Begin playing");			videoWorks.setState(videoWorks.getPlayState());		}		public function startRecord(ns:NetStream,flv:String):void		{			ns.publish(flv,"record");			trace("Begin recording");			videoWorks.setState(videoWorks.getRecordState());		}		public function startAppend(ns:NetStream,flv:String):void		{			ns.publish(flv,"append");			trace("Begin appending");			videoWorks.setState(videoWorks.getAppendState());		}		public function stopAll(ns:NetStream):void		{			trace("You're already stopped");		}		public function doPause(ns:NetStream):void		{			trace("Must be playing to pause.");		}	}}