package {	//Context Class #7	import flash.net.NetStream;	public class VideoWorks	{		var playState:State;		var stopState:State;		var recordState:State;		var appendState:State;		var pauseState:State;		var state:State;		public function VideoWorks ()		{			trace ("Video Player is on");			playState = new PlayState(this);			stopState = new StopState(this);			recordState = new RecordState(this);			appendState = new AppendState(this);			pauseState=new PauseState(this);			state=stopState;		}		public function startPlay (ns:NetStream,flv:String):void		{			state.startPlay (ns,flv);		}		public function startRecord (ns:NetStream,flv:String):void		{			state.startRecord (ns,flv);		}		public function startAppend (ns:NetStream,flv:String):void		{			state.startAppend (ns,flv);		}		public function stopAll (ns:NetStream):void		{			state.stopAll (ns);		}		public function doPause (ns:NetStream):void		{			state.doPause (ns);		}		public function setState (state:State):void		{			trace ("A new state is set");			this.state=state;		}		public function getState ():State		{			return state;		}		public function getPlayState ():State		{			return this.playState;		}		public function getRecordState ():State		{			return this.recordState;		}		public function getAppendState ():State		{			return this.appendState;		}		public function getPauseState ():State		{			return this.pauseState;		}		public function getStopState () :State		{			return this.stopState;		}	}}