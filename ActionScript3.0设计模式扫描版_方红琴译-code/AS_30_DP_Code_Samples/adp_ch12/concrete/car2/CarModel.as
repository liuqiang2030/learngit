package {		import flash.events.*;	import flash.geom.*;	import flash.utils.Timer;		public class CarModel extends EventDispatcher implements ICar {				protected var nSpeed:Number; // holds speed of car in pixels/frame		protected var nRotation:Number; // car rotation in Degrees		protected var ptLoc:Point; // current location		protected var carColor:uint; // car color				public function CarModel() {			nSpeed = 3;			nRotation = 0;			ptLoc = new Point(0, 0); // default loc is 0,0			carColor = 0x000000; // default color is black						// set timer to update car position every 1/20 second			var carMoveTimer:Timer = new Timer(1000 / 20);			carMoveTimer.addEventListener("timer", doMoveCar);            carMoveTimer.start();		}				public function setLoc(pt:Point):void {			ptLoc = pt;		}				public function getLoc():Point {			return ptLoc;		}				public function setColor(color:uint):void {			this.carColor = color;		}				public function getColor():uint {			return carColor;		}				public function getRotation():int {			return nRotation;		}				// Add this to car rotation angle (in Degrees)		public function addToRotationAngle(nAngle:int):void {			nRotation += nAngle;		}				// move the car 		private function doMoveCar(event:TimerEvent):void {			var newLocOffset:Point = Point.polar(nSpeed, nRotation * Math.PI / 180);			ptLoc.x += newLocOffset.x; // move by the x offset			ptLoc.y += newLocOffset.y; // move by the y offset			this.update();		}				protected function update():void {			dispatchEvent(new Event(Event.CHANGE)); // dispatch event		}	}}