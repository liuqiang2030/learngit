package {		import flash.events.*;	import fl.controls.RadioButton;	import fl.controls.RadioButtonGroup;		public class RBView extends ComponentView {				private var rbList:Array = new Array();		private var rbGrp:RadioButtonGroup;				public function RBView(aModel:INewModel, aController:ICompInputHandler) {						super(aModel, aController);						// get region names from model			var aMapTypes:Array = model.getMapTypeList(); 						// develop radio buttons using map type names			rbGrp = new RadioButtonGroup("Map Type");			for (var i:uint = 0; i < aMapTypes.length; i++) {				var rb:RadioButton = new RadioButton();				rb.label = aMapTypes[i];				rb.value = i;				rb.group = rbGrp;				rb.x = i * 75;				addChild(rb);				rbList.push(rb);			}			update(); // select default buttton						// register to recieve changes to radio button group            rbGrp.addEventListener(MouseEvent.CLICK, this.changeHandler); 		}				override public function update(event:Event = null):void {			// get data from model and update view			var index:uint = (model as INewModel).getMapType();			rbList[index].selected = true;			super.update(event);		}				private function changeHandler(event:Event):void {			// delegate to the controller (strategy) to handle map type change 			controller.compChangeHandler(event.target.selection.value);		}	}}